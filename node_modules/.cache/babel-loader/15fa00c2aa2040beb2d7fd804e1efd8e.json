{"remainingRequest":"/workspace/rolavelz/node_modules/babel-loader/lib/index.js!/workspace/rolavelz/node_modules/eslint-loader/index.js??ref--14-0!/workspace/rolavelz/src/helpers/fake-backend.js","dependencies":[{"path":"/workspace/rolavelz/src/helpers/fake-backend.js","mtime":1653923529000},{"path":"/workspace/rolavelz/babel.config.js","mtime":1653923529000},{"path":"/workspace/rolavelz/node_modules/cache-loader/dist/cjs.js","mtime":1654787577000},{"path":"/workspace/rolavelz/node_modules/babel-loader/lib/index.js","mtime":1654787577000},{"path":"/workspace/rolavelz/node_modules/eslint-loader/index.js","mtime":1654787581000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvd29ya3NwYWNlL3JvbGF2ZWx6L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuZW5kcy13aXRoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24uc3RyaW5naWZ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwovLyBhcnJheSBpbiBsb2NhbCBzdG9yYWdlIGZvciByZWdpc3RlcmVkIHVzZXJzCnZhciB1c2VycyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJzJykpIHx8IFt7CiAgdXNlcm5hbWU6ICJhZG1pbiIsCiAgZW1haWw6ICJhZG1pbkB0aGVtZXNicmFuZC5jb20iLAogIHBhc3N3b3JkOiAiMTIzNDU2Igp9XTsKZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ3VyZUZha2VCYWNrZW5kKCkgewogIHZhciByZWFsRmV0Y2ggPSB3aW5kb3cuZmV0Y2g7CgogIHdpbmRvdy5mZXRjaCA9IGZ1bmN0aW9uICh1cmwsIG9wdHMpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIC8vIHdyYXAgaW4gdGltZW91dCB0byBzaW11bGF0ZSBzZXJ2ZXIgYXBpIGNhbGwKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8gYXV0aGVudGljYXRlCiAgICAgICAgaWYgKHVybC5lbmRzV2l0aCgnL3VzZXJzL2F1dGhlbnRpY2F0ZScpICYmIG9wdHMubWV0aG9kID09PSAnUE9TVCcpIHsKICAgICAgICAgIC8vIGdldCBwYXJhbWV0ZXJzIGZyb20gcG9zdCByZXF1ZXN0CiAgICAgICAgICB2YXIgcGFyYW1zID0gSlNPTi5wYXJzZShvcHRzLmJvZHkpOyAvLyBmaW5kIGlmIGFueSB1c2VyIG1hdGNoZXMgbG9naW4gY3JlZGVudGlhbHMKCiAgICAgICAgICB2YXIgZmlsdGVyZWRVc2VycyA9IHVzZXJzLmZpbHRlcihmdW5jdGlvbiAodXNlcikgewogICAgICAgICAgICByZXR1cm4gdXNlci5lbWFpbCA9PT0gcGFyYW1zLmVtYWlsICYmIHVzZXIucGFzc3dvcmQgPT09IHBhcmFtcy5wYXNzd29yZDsKICAgICAgICAgIH0pOwoKICAgICAgICAgIGlmIChmaWx0ZXJlZFVzZXJzLmxlbmd0aCkgewogICAgICAgICAgICAvLyBpZiBsb2dpbiBkZXRhaWxzIGFyZSB2YWxpZCByZXR1cm4gdXNlciBkZXRhaWxzIGFuZCBmYWtlIGp3dCB0b2tlbgogICAgICAgICAgICB2YXIgdXNlciA9IGZpbHRlcmVkVXNlcnNbMF07CiAgICAgICAgICAgIHZhciByZXNwb25zZUpzb24gPSB7CiAgICAgICAgICAgICAgaWQ6IHVzZXIuaWQsCiAgICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXIudXNlcm5hbWUsCiAgICAgICAgICAgICAgbmFtZTogdXNlci5uYW1lLAogICAgICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLAogICAgICAgICAgICAgIHRva2VuOiAnZmFrZS1qd3QtdG9rZW4nCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIHJlc29sdmUoewogICAgICAgICAgICAgIG9rOiB0cnVlLAogICAgICAgICAgICAgIHRleHQ6IGZ1bmN0aW9uIHRleHQoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlSnNvbikpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyBlbHNlIHJldHVybiBlcnJvcgogICAgICAgICAgICByZWplY3QoJ1RoZXNlIGNyZWRlbnRpYWxzIGRvIG5vdCBtYXRjaCBvdXIgcmVjb3Jkcy4nKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSAvLyBnZXQgdXNlcnMKCgogICAgICAgIGlmICh1cmwuZW5kc1dpdGgoJy91c2VycycpICYmIG9wdHMubWV0aG9kID09PSAnR0VUJykgewogICAgICAgICAgLy8gY2hlY2sgZm9yIGZha2UgYXV0aCB0b2tlbiBpbiBoZWFkZXIgYW5kIHJldHVybiB1c2VycyBpZiB2YWxpZCwgdGhpcyBzZWN1cml0eSBpcyBpbXBsZW1lbnRlZCBzZXJ2ZXIgc2lkZSBpbiBhIHJlYWwgYXBwbGljYXRpb24KICAgICAgICAgIGlmIChvcHRzLmhlYWRlcnMgJiYgb3B0cy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPT09ICdCZWFyZXIgZmFrZS1qd3QtdG9rZW4nKSB7CiAgICAgICAgICAgIHJlc29sdmUoewogICAgICAgICAgICAgIG9rOiB0cnVlLAogICAgICAgICAgICAgIHRleHQ6IGZ1bmN0aW9uIHRleHQoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKEpTT04uc3RyaW5naWZ5KHVzZXJzKSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIHJldHVybiA0MDEgbm90IGF1dGhvcmlzZWQgaWYgdG9rZW4gaXMgbnVsbCBvciBpbnZhbGlkCiAgICAgICAgICAgIHJlamVjdCgnVW5hdXRob3Jpc2VkJyk7CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0gLy8gZ2V0IHVzZXIgYnkgaWQKCgogICAgICAgIGlmICh1cmwubWF0Y2goL1wvdXNlcnNcL1xkKyQvKSAmJiBvcHRzLm1ldGhvZCA9PT0gJ0dFVCcpIHsKICAgICAgICAgIC8vIGNoZWNrIGZvciBmYWtlIGF1dGggdG9rZW4gaW4gaGVhZGVyIGFuZCByZXR1cm4gdXNlciBpZiB2YWxpZCwgdGhpcyBzZWN1cml0eSBpcyBpbXBsZW1lbnRlZCBzZXJ2ZXIgc2lkZSBpbiBhIHJlYWwgYXBwbGljYXRpb24KICAgICAgICAgIGlmIChvcHRzLmhlYWRlcnMgJiYgb3B0cy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPT09ICdCZWFyZXIgZmFrZS1qd3QtdG9rZW4nKSB7CiAgICAgICAgICAgIC8vIGZpbmQgdXNlciBieSBpZCBpbiB1c2VycyBhcnJheQogICAgICAgICAgICB2YXIgdXJsUGFydHMgPSB1cmwuc3BsaXQoJy8nKTsKICAgICAgICAgICAgdmFyIGlkID0gcGFyc2VJbnQodXJsUGFydHNbdXJsUGFydHMubGVuZ3RoIC0gMV0pOwogICAgICAgICAgICB2YXIgbWF0Y2hlZFVzZXJzID0gdXNlcnMuZmlsdGVyKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHVzZXIuaWQgPT09IGlkOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIHZhciBfdXNlciA9IG1hdGNoZWRVc2Vycy5sZW5ndGggPyBtYXRjaGVkVXNlcnNbMF0gOiBudWxsOyAvLyByZXNwb25kIDIwMCBPSyB3aXRoIHVzZXIKCgogICAgICAgICAgICByZXNvbHZlKHsKICAgICAgICAgICAgICBvazogdHJ1ZSwKICAgICAgICAgICAgICB0ZXh0OiBmdW5jdGlvbiB0ZXh0KCkgewogICAgICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KF91c2VyKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gcmV0dXJuIDQwMSBub3QgYXV0aG9yaXNlZCBpZiB0b2tlbiBpcyBudWxsIG9yIGludmFsaWQKICAgICAgICAgICAgcmVqZWN0KCdVbmF1dGhvcmlzZWQnKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSAvLyByZWdpc3RlciB1c2VyCgoKICAgICAgICBpZiAodXJsLmVuZHNXaXRoKCcvdXNlcnMvcmVnaXN0ZXInKSAmJiBvcHRzLm1ldGhvZCA9PT0gJ1BPU1QnKSB7CiAgICAgICAgICAvLyBnZXQgbmV3IHVzZXIgb2JqZWN0IGZyb20gcG9zdCBib2R5CiAgICAgICAgICB2YXIgbmV3VXNlciA9IEpTT04ucGFyc2Uob3B0cy5ib2R5KTsgLy8gdmFsaWRhdGlvbgoKICAgICAgICAgIHZhciBkdXBsaWNhdGVVc2VyID0gdXNlcnMuZmlsdGVyKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgICAgIHJldHVybiB1c2VyLnVzZXJuYW1lID09PSBuZXdVc2VyLnVzZXJuYW1lOwogICAgICAgICAgfSkubGVuZ3RoOwoKICAgICAgICAgIGlmIChkdXBsaWNhdGVVc2VyKSB7CiAgICAgICAgICAgIHJlamVjdCgiVXNlcm5hbWUgJyIgKyBuZXdVc2VyLnVzZXJuYW1lICsgIicgaXMgYWxyZWFkeSB0YWtlbiIpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9IC8vIHNhdmUgbmV3IHVzZXIKCgogICAgICAgICAgbmV3VXNlci5pZCA9IHVzZXJzLmxlbmd0aCA/IE1hdGgubWF4LmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheSh1c2Vycy5tYXAoZnVuY3Rpb24gKHVzZXIpIHsKICAgICAgICAgICAgcmV0dXJuIHVzZXIuaWQ7CiAgICAgICAgICB9KSkpICsgMSA6IDE7CiAgICAgICAgICB1c2Vycy5wdXNoKG5ld1VzZXIpOwogICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXJzJywgSlNPTi5zdHJpbmdpZnkodXNlcnMpKTsgLy8gcmVzcG9uZCAyMDAgT0sKCiAgICAgICAgICByZXNvbHZlKHsKICAgICAgICAgICAgb2s6IHRydWUsCiAgICAgICAgICAgIHRleHQ6IGZ1bmN0aW9uIHRleHQoKSB7CiAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9IC8vIHBhc3MgdGhyb3VnaCBhbnkgcmVxdWVzdHMgbm90IGhhbmRsZWQgYWJvdmUKCgogICAgICAgIHJlYWxGZXRjaCh1cmwsIG9wdHMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICByZXR1cm4gcmVzb2x2ZShyZXNwb25zZSk7CiAgICAgICAgfSk7CiAgICAgIH0sIDUwMCk7CiAgICB9KTsKICB9Owp9"},{"version":3,"sources":["/workspace/rolavelz/src/helpers/fake-backend.js"],"names":["users","JSON","parse","localStorage","getItem","username","email","password","configureFakeBackend","realFetch","window","fetch","url","opts","Promise","resolve","reject","setTimeout","endsWith","method","params","body","filteredUsers","filter","user","length","responseJson","id","name","token","ok","text","stringify","headers","Authorization","match","urlParts","split","parseInt","matchedUsers","newUser","duplicateUser","Math","max","map","push","setItem","then","response"],"mappings":";;;;;;;;;;AAAA;AACA,IAAIA,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KACL,CAAC;AAAEC,EAAAA,QAAQ,EAAE,OAAZ;AAAqBC,EAAAA,KAAK,EAAE,uBAA5B;AAAqDC,EAAAA,QAAQ,EAAE;AAA/D,CAAD,CADP;AAGA,OAAO,SAASC,oBAAT,GAAgC;AAEnC,MAAIC,SAAS,GAAGC,MAAM,CAACC,KAAvB;;AACAD,EAAAA,MAAM,CAACC,KAAP,GAAe,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAEhC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACAC,MAAAA,UAAU,CAAC,YAAM;AAEb;AACA,YAAIL,GAAG,CAACM,QAAJ,CAAa,qBAAb,KAAuCL,IAAI,CAACM,MAAL,KAAgB,MAA3D,EAAmE;AAC/D;AACA,cAAIC,MAAM,GAAGnB,IAAI,CAACC,KAAL,CAAWW,IAAI,CAACQ,IAAhB,CAAb,CAF+D,CAI/D;;AACA,cAAIC,aAAa,GAAGtB,KAAK,CAACuB,MAAN,CAAa,UAAAC,IAAI,EAAI;AACrC,mBAAOA,IAAI,CAAClB,KAAL,KAAec,MAAM,CAACd,KAAtB,IAA+BkB,IAAI,CAACjB,QAAL,KAAkBa,MAAM,CAACb,QAA/D;AACH,WAFmB,CAApB;;AAIA,cAAIe,aAAa,CAACG,MAAlB,EAA0B;AACtB;AACA,gBAAID,IAAI,GAAGF,aAAa,CAAC,CAAD,CAAxB;AACA,gBAAII,YAAY,GAAG;AACfC,cAAAA,EAAE,EAAEH,IAAI,CAACG,EADM;AAEftB,cAAAA,QAAQ,EAAEmB,IAAI,CAACnB,QAFA;AAGfuB,cAAAA,IAAI,EAAEJ,IAAI,CAACI,IAHI;AAIftB,cAAAA,KAAK,EAAEkB,IAAI,CAAClB,KAJG;AAKfuB,cAAAA,KAAK,EAAE;AALQ,aAAnB;AAOAd,YAAAA,OAAO,CAAC;AAAEe,cAAAA,EAAE,EAAE,IAAN;AAAYC,cAAAA,IAAI,EAAE;AAAA,uBAAMjB,OAAO,CAACC,OAAR,CAAgBd,IAAI,CAAC+B,SAAL,CAAeN,YAAf,CAAhB,CAAN;AAAA;AAAlB,aAAD,CAAP;AACH,WAXD,MAWO;AACH;AACAV,YAAAA,MAAM,CAAC,6CAAD,CAAN;AACH;;AAED;AACH,SA7BY,CA+Bb;;;AACA,YAAIJ,GAAG,CAACM,QAAJ,CAAa,QAAb,KAA0BL,IAAI,CAACM,MAAL,KAAgB,KAA9C,EAAqD;AACjD;AACA,cAAIN,IAAI,CAACoB,OAAL,IAAgBpB,IAAI,CAACoB,OAAL,CAAaC,aAAb,KAA+B,uBAAnD,EAA4E;AACxEnB,YAAAA,OAAO,CAAC;AAAEe,cAAAA,EAAE,EAAE,IAAN;AAAYC,cAAAA,IAAI,EAAE;AAAA,uBAAMjB,OAAO,CAACC,OAAR,CAAgBd,IAAI,CAAC+B,SAAL,CAAehC,KAAf,CAAhB,CAAN;AAAA;AAAlB,aAAD,CAAP;AACH,WAFD,MAEO;AACH;AACAgB,YAAAA,MAAM,CAAC,cAAD,CAAN;AACH;;AAED;AACH,SA1CY,CA4Cb;;;AACA,YAAIJ,GAAG,CAACuB,KAAJ,CAAU,eAAV,KAA8BtB,IAAI,CAACM,MAAL,KAAgB,KAAlD,EAAyD;AACrD;AACA,cAAIN,IAAI,CAACoB,OAAL,IAAgBpB,IAAI,CAACoB,OAAL,CAAaC,aAAb,KAA+B,uBAAnD,EAA4E;AACxE;AACA,gBAAIE,QAAQ,GAAGxB,GAAG,CAACyB,KAAJ,CAAU,GAAV,CAAf;AACA,gBAAIV,EAAE,GAAGW,QAAQ,CAACF,QAAQ,CAACA,QAAQ,CAACX,MAAT,GAAkB,CAAnB,CAAT,CAAjB;AACA,gBAAIc,YAAY,GAAGvC,KAAK,CAACuB,MAAN,CAAa,UAAAC,IAAI,EAAI;AAAE,qBAAOA,IAAI,CAACG,EAAL,KAAYA,EAAnB;AAAwB,aAA/C,CAAnB;;AACA,gBAAIH,KAAI,GAAGe,YAAY,CAACd,MAAb,GAAsBc,YAAY,CAAC,CAAD,CAAlC,GAAwC,IAAnD,CALwE,CAOxE;;;AACAxB,YAAAA,OAAO,CAAC;AAAEe,cAAAA,EAAE,EAAE,IAAN;AAAYC,cAAAA,IAAI,EAAE;AAAA,uBAAM9B,IAAI,CAAC+B,SAAL,CAAeR,KAAf,CAAN;AAAA;AAAlB,aAAD,CAAP;AACH,WATD,MASO;AACH;AACAR,YAAAA,MAAM,CAAC,cAAD,CAAN;AACH;;AAED;AACH,SA9DY,CAgEb;;;AACA,YAAIJ,GAAG,CAACM,QAAJ,CAAa,iBAAb,KAAmCL,IAAI,CAACM,MAAL,KAAgB,MAAvD,EAA+D;AAC3D;AACA,cAAIqB,OAAO,GAAGvC,IAAI,CAACC,KAAL,CAAWW,IAAI,CAACQ,IAAhB,CAAd,CAF2D,CAG3D;;AACA,cAAIoB,aAAa,GAAGzC,KAAK,CAACuB,MAAN,CAAa,UAAAC,IAAI,EAAI;AAAE,mBAAOA,IAAI,CAACnB,QAAL,KAAkBmC,OAAO,CAACnC,QAAjC;AAA4C,WAAnE,EAAqEoB,MAAzF;;AACA,cAAIgB,aAAJ,EAAmB;AACfzB,YAAAA,MAAM,CAAC,eAAewB,OAAO,CAACnC,QAAvB,GAAkC,oBAAnC,CAAN;AACA;AACH,WAR0D,CAU3D;;;AACAmC,UAAAA,OAAO,CAACb,EAAR,GAAa3B,KAAK,CAACyB,MAAN,GAAeiB,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ1C,KAAK,CAAC4C,GAAN,CAAU,UAAApB,IAAI;AAAA,mBAAIA,IAAI,CAACG,EAAT;AAAA,WAAd,CAAR,EAAJ,GAA0C,CAAzD,GAA6D,CAA1E;AACA3B,UAAAA,KAAK,CAAC6C,IAAN,CAAWL,OAAX;AACArC,UAAAA,YAAY,CAAC2C,OAAb,CAAqB,OAArB,EAA8B7C,IAAI,CAAC+B,SAAL,CAAehC,KAAf,CAA9B,EAb2D,CAe3D;;AACAe,UAAAA,OAAO,CAAC;AAAEe,YAAAA,EAAE,EAAE,IAAN;AAAYC,YAAAA,IAAI,EAAE;AAAA,qBAAMjB,OAAO,CAACC,OAAR,EAAN;AAAA;AAAlB,WAAD,CAAP;AAEA;AACH,SApFY,CAsFb;;;AACAN,QAAAA,SAAS,CAACG,GAAD,EAAMC,IAAN,CAAT,CAAqBkC,IAArB,CAA0B,UAAAC,QAAQ;AAAA,iBAAIjC,OAAO,CAACiC,QAAD,CAAX;AAAA,SAAlC;AAEH,OAzFS,EAyFP,GAzFO,CAAV;AA0FH,KA5FM,CAAP;AA6FH,GA/FD;AAgGH","sourcesContent":["// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users'))\n    || [{ username: \"admin\", email: \"admin@themesbrand.com\", password: \"123456\" }];\n\nexport function configureFakeBackend() {\n\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n\n                // authenticate\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.email === params.email && user.password === params.password;\n                    });\n\n                    if (filteredUsers.length) {\n                        // if login details are valid return user details and fake jwt token\n                        let user = filteredUsers[0];\n                        let responseJson = {\n                            id: user.id,\n                            username: user.username,\n                            name: user.name,\n                            email: user.email,\n                            token: 'fake-jwt-token'\n                        };\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(responseJson)) });\n                    } else {\n                        // else return error\n                        reject('These credentials do not match our records.');\n                    }\n\n                    return;\n                }\n\n                // get users\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n                    if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(users)) });\n                    } else {\n                        // return 401 not authorised if token is null or invalid\n                        reject('Unauthorised');\n                    }\n\n                    return;\n                }\n\n                // get user by id\n                if (url.match(/\\/users\\/\\d+$/) && opts.method === 'GET') {\n                    // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\n                    if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\n                        // find user by id in users array\n                        let urlParts = url.split('/');\n                        let id = parseInt(urlParts[urlParts.length - 1]);\n                        let matchedUsers = users.filter(user => { return user.id === id; });\n                        let user = matchedUsers.length ? matchedUsers[0] : null;\n\n                        // respond 200 OK with user\n                        resolve({ ok: true, text: () => JSON.stringify(user) });\n                    } else {\n                        // return 401 not authorised if token is null or invalid\n                        reject('Unauthorised');\n                    }\n\n                    return;\n                }\n\n                // register user\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\n                    // get new user object from post body\n                    let newUser = JSON.parse(opts.body);\n                    // validation\n                    let duplicateUser = users.filter(user => { return user.username === newUser.username; }).length;\n                    if (duplicateUser) {\n                        reject(\"Username '\" + newUser.username + \"' is already taken\");\n                        return;\n                    }\n\n                    // save new user\n                    newUser.id = users.length ? Math.max(...users.map(user => user.id)) + 1 : 1;\n                    users.push(newUser);\n                    localStorage.setItem('users', JSON.stringify(users));\n\n                    // respond 200 OK\n                    resolve({ ok: true, text: () => Promise.resolve() });\n\n                    return;\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n\n            }, 500);\n        });\n    }\n}"]}]}